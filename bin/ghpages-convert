#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var assert = require('assert');
var prompt = require('prompt');
var program = require('commander');
var scarletWinston = require('scarlet-winston');
var version = require('../package.json').version;
var githubTemplateConverter = require('../lib/githubTemplateConverter');

var createDirectories = function(baseDirectory){

	assert(baseDirectory,'baseDirectory === null');

	fs.mkdir(baseDirectory+'/_posts');
	fs.mkdir(baseDirectory+'/_layouts');
	fs.mkdir(baseDirectory+'/_assets');
	fs.mkdir(baseDirectory+'/_includes');
}


program
	.version(version)
	.usage('<indexFileToConvert>')
	.parse(process.argv);

prompt.message ='';
prompt.start();

var property = {
  name: 'yesno',
  message: 'Are you sure you want to write to the current directory?',
  validator: /y[es]*|n[o]?/,
  warning: 'Must respond yes or no',
  default: 'yes'
};

prompt.get(property, function(err, result) {
	if(result.yesno.toLowerCase() !== 'y' && result.yesno.toLowerCase() !== 'yes' && result.yesno.toLowerCase() !== '')
		return;

	enableVerboseOutput();

	var indexFileToConvert = './index.html';

	if(program.args.length === 1){
		indexFileToConvert = program.args[0];
		if(indexFileToConvert.indexOf("html") < 0){
			scarletWinston.log("error","type of file must be html");	
			return;
		}
	}
	if(program.args.length > 1){
		scarletWinston.log("error","Only expected one argument but found:"+program.args.length);
		return;
	}

	scarletWinston.info("Parsing: "+indexFileToConvert);

	createDirectories(path.dirname(indexFileToConvert));
	githubTemplateConverter.convert(indexFileToConvert);
});

var enableVerboseOutput = function(){

	scarletWinston.intercept(githubTemplateConverter,'convert')
			.on('before',function(invocation){scarletWinston.info("About to convert the github template...")})
			.on('after',function(invocation){scarletWinston.info("Completed Converting")})
			.on('error',function(error){scarletWinston.log("error","Error Converting template:"+error.message);});

	createDirectories=scarletWinston.intercept(createDirectories)
						.on('before',function(invocation){scarletWinston.info("About to create directories...")})
						.on('after',function(invocation){scarletWinston.info("Completed Creating all directories")})
						.on('error',function(error){scarletWinston.log("error","Error Creating directories:"+error.message);})
						.resolve();
};


